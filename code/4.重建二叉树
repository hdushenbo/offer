题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        if(pre.length != in.length || pre.length == 0 || in.length == 0){
            return null;
        }
        int j = 0;
        TreeNode root = new TreeNode(pre[0]);
        for(int i = 0;i< in.length;i++){
            if(root.val == in[i]){
                j = i;
                break;
            }
        }
        int [] preleft = new int[j]; 
        int [] inleft = new int[j];
        int [] preright = new int[pre.length - j -1];
        int [] inright = new int[in.length - j -1];
        for(int i = 0 ;i < pre.length; i++){
            if(i<j){
                preleft[i] = pre[i+1];
                inleft[i] = in[i];
            }
            if(i>j){
                 preright[i-j-1] = pre[i];
                inright[i-j-1] = in[i];
            }
        }
        
        root.left = reConstructBinaryTree(preleft,inleft);
        root.right = reConstructBinaryTree(preright,inright);
        return root;
    }
}

